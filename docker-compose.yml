services:
  mysql-userdb:
    image: mysql:8
    container_name: mysql-userdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_user_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-alertdb:
    image: mysql:8
    container_name: mysql-alertdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: alert_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_alert_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      mysql-userdb:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-userdb:3306/user_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-must-be-at-least-256-bits-long-for-hs256-algorithm}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    ports:
      - "8081:8081"

  alert-service:
    build: ./alert-service
    container_name: alert-service
    depends_on:
      mysql-alertdb:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-alertdb:3306/alert_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8082:8082"

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - user-service
      - ingestion-service
      - alert-service
    environment:
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-must-be-at-least-256-bits-long-for-hs256-algorithm}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    ports:
      - "8080:8080"

  ingestion-service:
    build: ./transaction-ingestion-service
    container_name: ingestion-service
    depends_on:
      - fraud-scoring-service
      - alert-service
    ports:
      - "8083:8083"

  fraud-scoring-service:
    build: ./fraud-scoring-service
    container_name: fraud-scoring-service
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - api-gateway

volumes:
  mysql_user_data:
  mysql_alert_data: 